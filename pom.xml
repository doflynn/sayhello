<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.lodentech.sayhello</groupId>
	<artifactId>sayhello</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<scanPath>com.lodentech</scanPath>
		<sayhello.version>1.0.0-SNAPSHOT</sayhello.version>
		<osgi.version>6.0.0</osgi.version>
		<slf4j.version>1.7.14</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
	</properties>


	<modules>
		<module>sayhello-api</module>
		<module>sayhello-svc</module>
		<module>sayhello-feature</module>
	</modules>

	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>${osgi.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<type>bundle</type>
		</dependency>

		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.cmpn</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>


		<!-- OSGi Blueprint Annotations -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.cdi</groupId>
			<artifactId>pax-cdi-api</artifactId>
			<version>0.8.0</version>
			<optional>true</optional>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<!-- Apache Karaf -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.karaf.tooling</groupId>
					<artifactId>karaf-maven-plugin</artifactId>
					<version>4.0.0</version>
					<extensions>true</extensions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>3.2.0</version>
				<extensions>true</extensions>
				<configuration>
					<obrRepository>NONE</obrRepository>
					<instructions>
						<service_mode>generic</service_mode>
						<_include>-bnd.bnd</_include>
						<!-- djo is this needed to register OSGi service? <Service-Component>OSGI-INF/serviceComponents.xml</Service-Component> -->
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.aries.blueprint</groupId>
				<artifactId>blueprint-maven-plugin</artifactId>
				<version>1.5.0</version>
				<executions>
					<execution>
						<goals>
							<goal>add-resource-dir</goal>
							<goal>blueprint-generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scanPaths>
						<scanPath>${scanPath}</scanPath>
					</scanPaths>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.karaf.tooling</groupId>
				<artifactId>karaf-maven-plugin</artifactId>
				<configuration>
					<startLevel>50</startLevel>
					<aggregateFeatures>true</aggregateFeatures>
					<resolver>(obr)</resolver>
					<checkDependencyChange>true</checkDependencyChange>
					<failOnDependencyChange>false</failOnDependencyChange>
					<logDependencyChanges>true</logDependencyChanges>
					<overwriteChangedDependencies>true</overwriteChangedDependencies>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
